<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="9923a227-5952-4d8a-8ca5-7fc212eee152" activeEnvironment="Default" name="Banking Project" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="ceec073f-237c-4cb7-b796-8c152be1ba6a" wsaVersion="NONE" name="BLZServiceSOAP11Binding" type="wsdl" bindingName="{http://thomas-bayer.com/blz/}BLZServiceSOAP11Binding" soapVersion="1_1" anonymous="optional" definition="http://www.thomas-bayer.com/axis2/services/BLZService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://www.thomas-bayer.com/axis2/services/BLZService?wsdl"><con:part><con:url>http://www.thomas-bayer.com/axis2/services/BLZService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://thomas-bayer.com/blz/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://thomas-bayer.com/blz/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:documentation>BLZService</wsdl:documentation>
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://thomas-bayer.com/blz/">
      <xsd:element name="getBank" type="tns:getBankType"/>
      <xsd:element name="getBankResponse" type="tns:getBankResponseType"/>
      <xsd:complexType name="getBankType">
        <xsd:sequence>
          <xsd:element name="blz" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getBankResponseType">
        <xsd:sequence>
          <xsd:element name="details" type="tns:detailsType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="detailsType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="bezeichnung" type="xsd:string"/>
          <xsd:element minOccurs="0" name="bic" type="xsd:string"/>
          <xsd:element minOccurs="0" name="ort" type="xsd:string"/>
          <xsd:element minOccurs="0" name="plz" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getBank">
    <wsdl:part name="parameters" element="tns:getBank"/>
  </wsdl:message>
  <wsdl:message name="getBankResponse">
    <wsdl:part name="parameters" element="tns:getBankResponse"/>
  </wsdl:message>
  <wsdl:portType name="BLZServicePortType">
    <wsdl:operation name="getBank">
      <wsdl:input message="tns:getBank"/>
      <wsdl:output message="tns:getBankResponse" wsaw:Action="http://thomas-bayer.com/blz/BLZService/getBankResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BLZServiceSOAP11Binding" type="tns:BLZServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBank">
      <soap:operation style="document" soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BLZServiceSOAP12Binding" type="tns:BLZServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBank">
      <soap12:operation style="document" soapAction=""/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BLZServiceHttpBinding" type="tns:BLZServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getBank">
      <http:operation location="BLZService/getBank"/>
      <wsdl:input>
        <mime:content part="getBank" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getBank" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BLZService">
    <wsdl:port name="BLZServiceSOAP11port_http" binding="tns:BLZServiceSOAP11Binding">
      <soap:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
    <wsdl:port name="BLZServiceSOAP12port_http" binding="tns:BLZServiceSOAP12Binding">
      <soap12:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
    <wsdl:port name="BLZServiceHttpport" binding="tns:BLZServiceHttpBinding">
      <http:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8088/BLZLocalService</con:endpoint><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint></con:endpoints><con:operation id="d4aaddf5-0c60-4915-b4d8-9b9fca965bc3" isOneWay="false" action="" name="getBank" bindingOperationName="getBank" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ba8b4d56-6dd7-46f5-a4d5-6294e06cc25a" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>28069994</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a0118e79-1477-4d8e-982a-435c6d5db9fe" wsaVersion="NONE" name="BLZServiceSOAP12Binding" type="wsdl" bindingName="{http://thomas-bayer.com/blz/}BLZServiceSOAP12Binding" soapVersion="1_2" anonymous="optional" definition="http://www.thomas-bayer.com/axis2/services/BLZService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://www.thomas-bayer.com/axis2/services/BLZService?wsdl"><con:part><con:url>http://www.thomas-bayer.com/axis2/services/BLZService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://thomas-bayer.com/blz/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://thomas-bayer.com/blz/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:documentation>BLZService</wsdl:documentation>
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://thomas-bayer.com/blz/">
      <xsd:element name="getBank" type="tns:getBankType"/>
      <xsd:element name="getBankResponse" type="tns:getBankResponseType"/>
      <xsd:complexType name="getBankType">
        <xsd:sequence>
          <xsd:element name="blz" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getBankResponseType">
        <xsd:sequence>
          <xsd:element name="details" type="tns:detailsType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="detailsType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="bezeichnung" type="xsd:string"/>
          <xsd:element minOccurs="0" name="bic" type="xsd:string"/>
          <xsd:element minOccurs="0" name="ort" type="xsd:string"/>
          <xsd:element minOccurs="0" name="plz" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getBank">
    <wsdl:part name="parameters" element="tns:getBank"/>
  </wsdl:message>
  <wsdl:message name="getBankResponse">
    <wsdl:part name="parameters" element="tns:getBankResponse"/>
  </wsdl:message>
  <wsdl:portType name="BLZServicePortType">
    <wsdl:operation name="getBank">
      <wsdl:input message="tns:getBank"/>
      <wsdl:output message="tns:getBankResponse" wsaw:Action="http://thomas-bayer.com/blz/BLZService/getBankResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BLZServiceSOAP11Binding" type="tns:BLZServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBank">
      <soap:operation style="document" soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BLZServiceSOAP12Binding" type="tns:BLZServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBank">
      <soap12:operation style="document" soapAction=""/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BLZServiceHttpBinding" type="tns:BLZServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getBank">
      <http:operation location="BLZService/getBank"/>
      <wsdl:input>
        <mime:content part="getBank" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getBank" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BLZService">
    <wsdl:port name="BLZServiceSOAP11port_http" binding="tns:BLZServiceSOAP11Binding">
      <soap:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
    <wsdl:port name="BLZServiceSOAP12port_http" binding="tns:BLZServiceSOAP12Binding">
      <soap12:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
    <wsdl:port name="BLZServiceHttpport" binding="tns:BLZServiceHttpBinding">
      <http:address location="http://www.thomas-bayer.com/axis2/services/BLZService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint></con:endpoints><con:operation id="2b9a8b51-fdb2-4f36-b2cd-63486e483d4d" isOneWay="false" action="" name="getBank" bindingOperationName="getBank" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e4a1e26d-7222-4eeb-b896-9f775cc051a7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <blz:getBank>\r
         <blz:blz>?</blz:blz>\r
      </blz:getBank>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7e31bc49-b015-4ea1-9ac9-0ea4273cce36" wsaVersion="NONE" name="MediCareSupplierSoap12" type="wsdl" bindingName="{http://www.webservicex.net/}MediCareSupplierSoap12" soapVersion="1_2" anonymous="optional" definition="http://www.webservicex.net/medicareSupplier.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint></con:endpoints><con:operation id="8968891b-d0c6-4d80-826d-c878f23dceb8" isOneWay="false" action="http://www.webservicex.net/GetSupplierByCity" name="GetSupplierByCity" bindingOperationName="GetSupplierByCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ce9b018f-db91-4424-a369-e1a3d92301c1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierByCity>\r
         <!--Optional:-->\r
         <web:City>?</web:City>\r
      </web:GetSupplierByCity>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierByCityRequest"/></con:call></con:operation><con:operation id="c6a1e689-2bb1-4c9a-9b50-256cc0194798" isOneWay="false" action="http://www.webservicex.net/GetSupplierBySupplyType" name="GetSupplierBySupplyType" bindingOperationName="GetSupplierBySupplyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8d883eb5-2f05-4643-aa27-8e6fa8260862" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierBySupplyType>\r
         <!--Optional:-->\r
         <web:description>?</web:description>\r
      </web:GetSupplierBySupplyType>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierBySupplyTypeRequest"/></con:call></con:operation><con:operation id="76dc2b69-46a4-4c0e-ae4d-e214608404ae" isOneWay="false" action="http://www.webservicex.net/GetSupplierByZipCode" name="GetSupplierByZipCode" bindingOperationName="GetSupplierByZipCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7c00b041-d2d4-4f76-b200-636565eb7043" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:GetSupplierByZipCode>\r
         <!--Optional:-->\r
         <web:zip>?</web:zip>\r
      </web:GetSupplierByZipCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/MediCareSupplierSoap/GetSupplierByZipCodeRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2596bc77-455f-42dd-8172-5fc84649c2ec" wsaVersion="NONE" name="MediCareSupplierSoap" type="wsdl" bindingName="{http://www.webservicex.net/}MediCareSupplierSoap" soapVersion="1_1" anonymous="optional" definition="http://www.webservicex.net/medicareSupplier.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://www.webservicex.net/medicareSupplier.asmx?WSDL"><con:part><con:url>http://www.webservicex.net/medicareSupplier.asmx?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.webservicex.net/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.webservicex.net/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation>This section provides names, addresses, and contact information for suppliers that provide services or products under the Medicare program. A supplier is an individual or entity that has agreed to provide health care equipment, items, or services under Medicare. A supplier may provide items such as: Durable Medical Equipment (wheelchairs, walkers, oxygen), Prosthetics (artificial limb replacements or dentures) or Orthotics (mechanical devices used to assist in mobility or supplement the joints and limbs). In addition, a type of supplier can also be Pharmacy/Drug Stores and Optometry/Opticians.This Supplier Directory lists Medicare enrolled pharmacies and suppliers.</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.webservicex.net/">
      <s:element name="GetSupplierByZipCode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="zip" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierByZipCodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierByZipCodeResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="SupplierDataList">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SupplierDatas" type="tns:ArrayOfSupplierData"/>
          <s:element minOccurs="1" maxOccurs="1" name="TotalRecords" type="s:int"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfSupplierData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="SupplierData" type="tns:SupplierData"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="SupplierData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="SupplierNumber" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="CompanyName" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Address1" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Address2" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Zip" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="ZipPlus4" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Telephone" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="IsSupplierParticipating" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetSupplierByCity">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierByCityResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierByCityResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierBySupplyType">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="description" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSupplierBySupplyTypeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSupplierBySupplyTypeResult" type="s:boolean"/>
            <s:element minOccurs="1" maxOccurs="1" name="SupplierDataLists" type="tns:SupplierDataList"/>
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetSupplierByZipCodeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierByZipCode"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByZipCodeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierByZipCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByCitySoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierByCity"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierByCitySoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierByCityResponse"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierBySupplyTypeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSupplierBySupplyType"/>
  </wsdl:message>
  <wsdl:message name="GetSupplierBySupplyTypeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSupplierBySupplyTypeResponse"/>
  </wsdl:message>
  <wsdl:portType name="MediCareSupplierSoap">
    <wsdl:operation name="GetSupplierByZipCode">
      <wsdl:documentation>Get Supplier details by Zip Code</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierByZipCodeSoapIn"/>
      <wsdl:output message="tns:GetSupplierByZipCodeSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <wsdl:documentation>Get Supplier details by City</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierByCitySoapIn"/>
      <wsdl:output message="tns:GetSupplierByCitySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <wsdl:documentation>Get Supplier details by Supply Type</wsdl:documentation>
      <wsdl:input message="tns:GetSupplierBySupplyTypeSoapIn"/>
      <wsdl:output message="tns:GetSupplierBySupplyTypeSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="MediCareSupplierHttpGet"/>
  <wsdl:portType name="MediCareSupplierHttpPost"/>
  <wsdl:binding name="MediCareSupplierSoap" type="tns:MediCareSupplierSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSupplierByZipCode">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierByZipCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierByCity" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <soap:operation soapAction="http://www.webservicex.net/GetSupplierBySupplyType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierSoap12" type="tns:MediCareSupplierSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSupplierByZipCode">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierByZipCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierByCity">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierByCity" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSupplierBySupplyType">
      <soap12:operation soapAction="http://www.webservicex.net/GetSupplierBySupplyType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierHttpGet" type="tns:MediCareSupplierHttpGet">
    <http:binding verb="GET"/>
  </wsdl:binding>
  <wsdl:binding name="MediCareSupplierHttpPost" type="tns:MediCareSupplierHttpPost">
    <http:binding verb="POST"/>
  </wsdl:binding>
  <wsdl:service name="MediCareSupplier">
    <wsdl:documentation>This section provides names, addresses, and contact information for suppliers that provide services or products under the Medicare program. A supplier is an individual or entity that has agreed to provide health care equipment, items, or services under Medicare. A supplier may provide items such as: Durable Medical Equipment (wheelchairs, walkers, oxygen), Prosthetics (artificial limb replacements or dentures) or Orthotics (mechanical devices used to assist in mobility or supplement the joints and limbs). In addition, a type of supplier can also be Pharmacy/Drug Stores and Optometry/Opticians.This Supplier Directory lists Medicare enrolled pharmacies and suppliers.</wsdl:documentation>
    <wsdl:port name="MediCareSupplierSoap" binding="tns:MediCareSupplierSoap">
      <soap:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierSoap12" binding="tns:MediCareSupplierSoap12">
      <soap12:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierHttpGet" binding="tns:MediCareSupplierHttpGet">
      <http:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
    <wsdl:port name="MediCareSupplierHttpPost" binding="tns:MediCareSupplierHttpPost">
      <http:address location="http://www.webservicex.net/medicareSupplier.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint></con:endpoints><con:operation id="7bcb625e-08f6-4faa-be12-dd6ef386d52c" isOneWay="false" action="http://www.webservicex.net/GetSupplierByCity" name="GetSupplierByCity" bindingOperationName="GetSupplierByCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="550d5eab-89e9-4daf-8cd4-a447ada34cee" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierByCity>\r
         <!--Optional:-->\r
         <web:City>?</web:City>\r
      </web:GetSupplierByCity>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierByCity"/></con:call></con:operation><con:operation id="e2eed533-9b8f-4e65-9169-9b57c6f50065" isOneWay="false" action="http://www.webservicex.net/GetSupplierBySupplyType" name="GetSupplierBySupplyType" bindingOperationName="GetSupplierBySupplyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4665e63c-d17f-4dc9-8a84-7f6d7016dfe3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierBySupplyType>\r
         <!--Optional:-->\r
         <web:description>?</web:description>\r
      </web:GetSupplierBySupplyType>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierBySupplyType"/></con:call></con:operation><con:operation id="53799e49-6a7b-4a84-9864-51c43b89a86b" isOneWay="false" action="http://www.webservicex.net/GetSupplierByZipCode" name="GetSupplierByZipCode" bindingOperationName="GetSupplierByZipCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b9036aa7-1b4a-4ca5-ace2-681ec5f58992" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierByZipCode>\r
         <!--Optional:-->\r
         <web:zip>?</web:zip>\r
      </web:GetSupplierByZipCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierByZipCode"/></con:call></con:operation></con:interface><con:testSuite id="9d3a0ccf-5c6f-4cb5-b908-4585e10be414" name="TS01_Bank service testing"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6f582e33-e331-490f-b779-9e433a5a8490" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC01_getBank operation" searchProperties="true"><con:settings/><con:testStep type="request" id="a1d3624d-6ed0-4a6b-ab13-e8cf4232c696" name="getBank - BLZ code request 28069994"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - BLZ code request 28069994" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="951d1b3d-4e92-4ad9-aa07-ff074acde3ec"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>28069994</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="172cecf8-7d26-4b82-b9ba-bc96b099552f" name="SOAP Response"/><con:credentials><con:username>${#Project#username}</con:username><con:password>${#Project#password}</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9e6fc92c-3789-4eed-9d3b-421a5065f8d9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC02_getBank operation testing 2" searchProperties="true"><con:settings/><con:testStep type="request" id="d30f265f-3229-48a4-968d-f339ac0439fc" name="getBank - Request for BLZ code 47852760"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - Request for BLZ code 47852760" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5c28ad77-487d-4f48-9f48-6d923272c0b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>${#TestCase#blzCode}</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dab87aa1-482f-4bb2-8f2a-164972181bcf" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a1c4d34a-e8a7-4a75-9e01-f56abb590160"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>blzCodeTransfer</con:name><con:sourceType>blzCode</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>blzCode</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bicCodeTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getBank - Request for BLZ code 47852760</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';

//ns1:getBankResponse/ns1:details/ns1:bic
</con:sourcePath><con:targetType>bicCode</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ortTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getBank - Request for BLZ code 47852760</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';
//ns1:getBankResponse/ns1:details/ns1:ort</con:sourcePath><con:targetType>ort</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>plzTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getBank - Request for BLZ code 47852760</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';
//ns1:getBankResponse/ns1:details/ns1:plz</con:sourcePath><con:targetType>plz</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="4685de51-2af3-454f-8c5f-318eae2ceb58"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>bicCode</con:name><con:value>WELADED1RTG</con:value></con:property><con:property><con:name>blzCode</con:name><con:value>47852760</con:value></con:property><con:property><con:name>ort</con:name><con:value>Rietberg</con:value></con:property><con:property><con:name>plz</con:name><con:value>33381</con:value></con:property></con:properties></con:config></con:testStep><con:properties><con:property><con:name>blzCode</con:name><con:value>47852760</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="bb08a07b-a356-479f-9b72-713196ba8a3c" name="TS02_Bank service testing"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6bdda820-18cb-40f3-b567-95a56578435f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC03_getBank operation testing 2" searchProperties="true"><con:settings/><con:testStep type="request" id="6663fe3d-af94-4752-b8a8-6b8f0048f581" name="getBank - Request for BLZ code 30120764"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - Request for BLZ code 30120764" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5c28ad77-487d-4f48-9f48-6d923272c0b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>30120764</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dab87aa1-482f-4bb2-8f2a-164972181bcf" name="SOAP Response"/><con:credentials><con:username>okles</con:username><con:password>uptheirons</con:password><con:domain/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="d97c1880-b06a-4261-aab7-6f0dfd4ef15c" name="TS03_Bank service testing"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6eb6b0e0-d7dc-46c5-90b9-6e372e6cb905" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC01_getBank operation" searchProperties="true"><con:settings/><con:testStep type="request" id="dea2aa81-d1fc-4c31-8900-40ad9051e321" name="getBank - BLZ code request 28069994"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - BLZ code request 28069994" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="951d1b3d-4e92-4ad9-aa07-ff074acde3ec"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>28069994</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="726119d7-1090-4e21-89e4-d93cb738da68" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="450821ab-2764-4a63-b248-765099f95b26" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC02_getBank operation testing 2" searchProperties="true"><con:settings/><con:testStep type="request" id="ffae4c17-9146-4781-ab07-3c1101010d58" name="getBank - Request for BLZ code 47852760"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - Request for BLZ code 47852760" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5c28ad77-487d-4f48-9f48-6d923272c0b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>47852760</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dab87aa1-482f-4bb2-8f2a-164972181bcf" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="c8be3782-f88b-4fd6-a265-3995d1215d5a" name="TS04_supplierService"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="8a6f0c72-7d88-44f2-9bec-fa0de3c6765f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TS01_getSupplierByZipCode" searchProperties="true"><con:settings/><con:testStep type="request" id="c126b7f5-b503-40d1-90f2-91fe6a48704a" name="GetSupplierByZipCode - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MediCareSupplierSoap</con:interface><con:operation>GetSupplierByZipCode</con:operation><con:request name="GetSupplierByZipCode - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0b46c0d3-238d-4cbf-b6f7-b75ba2d7a61d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/medicareSupplier.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webservicex.net/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetSupplierByZipCode>\r
         <!--Optional:-->\r
         <web:zip>75070</web:zip>\r
      </web:GetSupplierByZipCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a080b4c2-cf3a-454f-80a9-2194fe8e70e4" name="SOAP Response"/><con:assertion type="XPath Match" id="b7d0e439-6bba-4214-acb3-04a1d8753e70" name="countOfSuppliersOutsideZipCode75070"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://www.webservicex.net/';
count(//ns1:GetSupplierByZipCodeResponse/ns1:SupplierDataLists/ns1:SupplierDatas/ns1:SupplierData[ns1:ZipPlus4!='75070'])</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="1dfad456-077c-4afd-b335-add07cbb877b" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XQuery Match" id="2c191e1c-ec98-44a3-9d13-c51fac55902a" name="zipCodesListing"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://www.webservicex.net/';
&lt;zipcodes>
{
for $supplier in //ns1:SupplierData
return &lt;zip>{ data($supplier/ns1:ZipPlus4/text())}&lt;/zip>
}
&lt;/zipcodes></path><content><![CDATA[<zipcodes>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
  <zip>75070</zip>
</zipcodes>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XQuery Match" id="2c191e1c-ec98-44a3-9d13-c51fac55902a" name="supplierNoListing"><con:configuration><path><![CDATA[declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://www.webservicex.net/';
<suppliers>
{
for $supplier in //ns1:SupplierData
return <supplier>
<supplierNo>{data($supplier/ns1:SupplierNumber/text())}</supplierNo>
<city>{data($supplier/ns1:City/text())}</city>
</supplier>
}
</suppliers>]]></path><content><![CDATA[<suppliers>
  <supplier>
    <supplierNo>0145370001</supplierNo>
    <city>MCKINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>0191800001</supplierNo>
    <city>MCKINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>0282932325</supplierNo>
    <city>MC KINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>0483390908</supplierNo>
    <city>MC KINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>0879960004</supplierNo>
    <city>MCKINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>1012120023</supplierNo>
    <city>MC KINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>4077810037</supplierNo>
    <city>MCKINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>1195882590</supplierNo>
    <city>MC KINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>1307140137</supplierNo>
    <city>MC KINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>4691680001</supplierNo>
    <city>MCKINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>4360370322</supplierNo>
    <city>MCKINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>4781330001</supplierNo>
    <city>MCKINNEY</city>
  </supplier>
  <supplier>
    <supplierNo>4924500001</supplierNo>
    <city>MCKINNEY</city>
  </supplier>
</suppliers>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GetSupplierByZipCode"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="0e7377d6-f9d5-4f9e-b080-b5552742baf8" name="TS05_workingWithPropertyConcepts"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="55a74620-1182-40dd-8f98-31d11b652dde" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC1_workingWithProperties" searchProperties="true"><con:settings/><con:testStep type="request" id="c13d14ab-7427-470d-9180-c1198b78b252" name="getBank - Request 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2fad8310-eba7-482f-99a0-03a626c03856"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>28069994</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="23a4ca08-828f-4cf7-afb2-8ce1fd29ddc3" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="c9a69084-0a8a-4ebe-ac1b-907db6b1dafe"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bicTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getBank - Request 1</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';

//ns1:getBankResponse/ns1:details/ns1:bic</con:sourcePath><con:targetType>bic_code</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ortTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getBank - Request 1</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';

//ns1:getBankResponse/ns1:details/ns1:ort</con:sourcePath><con:targetType>ort_code</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>plzTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getBank - Request 1</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://thomas-bayer.com/blz/';

//ns1:getBankResponse/ns1:details/ns1:plz
</con:sourcePath><con:targetType>plz_code</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="723f04fe-78e1-4be4-a076-cf0810ae896a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>bic_code</con:name><con:value>GENODEF1SPL</con:value></con:property><con:property><con:name>ort_code</con:name><con:value>Spelle</con:value></con:property><con:property><con:name>plz_code</con:name><con:value>48480</con:value></con:property></con:properties></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="4f9e831c-813d-4381-b08d-2d79760c36b9" name="TS06_GroovyBasics"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2685556c-abe3-4f0d-b7ce-a4d3283d5762" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC01_GroovyStuff" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script - Groovy Basics" id="e17721ab-4588-4310-bf2c-eec347d7f012"><con:settings/><con:config><script>//variable declaration
def name
String firstNam, llastName, country
firstName = 'John'
lastName = 'Doe'
int age
double salary

salary = 10000
age = 25
country = 'Poland'
log.info 'First name:  ' +firstName
log.info 'Last name: ' +lastName
log.warn 'Age: ' +age
log.error 'Salary: ' +salary
log.info "Country:  $country"</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - Conditions" id="c86f9bdd-deda-4e4e-af1a-64c503730fa3"><con:settings/><con:config><script>boolean isPassed

isPassed = true


if (isPassed == true)
{
	log.info 'Hurraay!!'
	
}

else
{
log.error 'Oh nooo!'
	
}


//multiple scenarios

grade = 'B'

if(grade =='A')
{
log.info 'You got a car! '
	
}

else if (grade =='B')
{
log.warn 'You got a bike!'

}
else
{
log.error 'You got nothing!'
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - Lists" id="61403efc-d879-4701-86a6-2aa05aed54e2"><con:settings/><con:config><script>//Working with Lists and Maps
String fruit, country

fruit = 'Apple'
fruit = 'Banana'

//defining a list
def fruits = ['Apple', 'Banana', 'Grapes', 'Orange', 'Mango']

log.info "Fruit name = $fruit"

log.info "Possible fruits are: $fruits"

//loop

fruits.each{
	fruitName -> 
	log.info "Name is $fruitName"
}

//checking if a list contains a specific value

String desiredFruit = 'Carrot'
boolean hasFruit = fruits.contains(desiredFruit)

if(hasFruit == true) {
log.info "A fruit list contains $desiredFruit"
}
else
{
log.error "Can't find $desiredFruit in a list"
	
}

//Adding a fruit to a list

fruits.add('Papaya')
fruits &lt;&lt; ('Carrot')

hasFruit = fruits.contains(desiredFruit)

log.warn "----------------After adding----------------"
if(hasFruit == true) {
log.info "A fruit list contains $desiredFruit"
}
else
{
log.error "Can't find $desiredFruit in a list"
	
}
//remove carrot from a list
fruits.remove('Carrot')
hasFruit = fruits.contains(desiredFruit)

log.warn "----------------After removing----------------"
if(hasFruit == true) {
log.info "A fruit list contains $desiredFruit"
}
else
{
log.error "Can't find $desiredFruit in a list"
	
}</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - Maps" id="ca43fccd-6df2-4210-8cac-882c71fb3611"><con:settings/><con:config><script>//defining a map
def countries = ['POL' : 'Poland',
					  'USA' : 'United States',
					  'RUS' : 'Russia'
					  ]

//finding an element of a map
String desiredCountry = 'POL'

boolean identifiedCountry = countries.containsKey(desiredCountry)
//getting a country name
String countryName = countries.get(desiredCountry)

if (identifiedCountry)
{
log.info "Found country: $desiredCountry:  $countryName"
}
else
{
log.error "Did not find: $desiredCountry in a map"
}

//adding a new entry to a map
countries.put('DEU', 'Germany')

log.info countries





</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - Assertions" id="dc67f380-f3ea-41ee-976b-40cd2a81edba"><con:settings/><con:config><script>String expectedName, actualName

expectedName = 'Lukasz'
actualName = 'Lukasz'

int a,b,c
a=10
b=10
c= a+b

log.info 'Before assertion: ' 

assert expectedName == actualName,"Names are not matching. Expected name is $expectedName , while actual name is $actualName"
assert c == 20,"Values are not matching"
log.info 'After assertion: ' 

def fruits = ['Apple','Banana','Grapes','Mango']

assert true == fruits.contains('Apple')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - Reading project artifacts" id="352bc191-0411-4aa7-8a12-487ca80fd773"><con:settings/><con:config><script>//test case name
log.info testRunner.testCase.name

//test suite name
log.info testRunner.testCase.testSuite.name

//project name
log.info testRunner.testCase.testSuite.project.name

//workspace name
log.info testRunner.testCase.testSuite.project.workspace.name

//accessing a test case from an other test suite
log.info testRunner.testCase.testSuite.project.getTestSuiteByName('TS01_Bank service testing').getTestCaseByName('TC01_getBank operation').name

//loop through all test suites and print their names
def testSuiteMap = testRunner.testCase.testSuite.project.testSuites

testSuiteMap.each
{
	tsEntry -> log.info tsEntry.key  
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - Read data from Excel sheet" id="9b91a3b9-c89d-4c5a-b32b-006a09f5c88b"><con:settings/><con:config><script>//importing JXL libraries
import jxl.*

//create a file instance
//def excelFilePath = "D:\\Soap Projekty\\DataforBLZService.xls"
File excelFile = new File('D:\\Soap Projekty\\DataforBLZService.xls')

//create a workbook instance
Workbook workbook = Workbook.getWorkbook(excelFile)

//load a sheet
Sheet sheet = workbook.getSheet (0)

//i want to read the data in a sheet
int noOfRows = sheet.getRows() -1  //number of rows in a sheet minus headers
log.info "Number of rows in a file is $noOfRows"

//loop through the records and print data
def blz,bic,bez,ort,plz
for(int rowIdx in 1..noOfRows)
{
	//read the contents of the cell
	log.warn '--------------------------------------'
	blz =  sheet.getCell(0,rowIdx).getContents() //colIdx,rowIdx
	bez = sheet.getCell(1,rowIdx).getContents() //colIdx,rowIdx
	bic =  sheet.getCell(2,rowIdx).getContents() //colIdx,rowIdx
	ort = sheet.getCell(3,rowIdx).getContents() //colIdx,rowIdx
	plz =  sheet.getCell(4,rowIdx).getContents() //colIdx,rowIdx
	log.info "blz: $blz, bez: $bez, bic: $bic, ort: $ort, plz: $plz"

	log.warn '--------------------------------------'
}

//closing a sheet
workbook.close()
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="ffe2d657-6abb-4feb-ad39-86913a025e58" name="TS06_Groovy Automation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a4622296-c079-457d-943b-c81a9e74411e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC01_getBank operation" searchProperties="true"><con:settings/><con:testStep type="request" id="0a11f12b-65de-49f8-9282-467567194b8a" name="getBank - BLZ code request 28069994"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - BLZ code request 28069994" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="951d1b3d-4e92-4ad9-aa07-ff074acde3ec"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <blz:getBank>\r
         <blz:blz>28069994</blz:blz>\r
      </blz:getBank>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="726119d7-1090-4e21-89e4-d93cb738da68" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - calling a test step" id="2f59117d-2bd0-4ff9-be45-72027ac91d15"><con:settings/><con:config><script>import groovy.util.XmlSlurper

//calling a test step
def testStepName='getBank - BLZ code request 28069994'
def testStep = testRunner.testCase.getTestStepByName(testStepName)

//running a test step
def response = testStep.run(testRunner,context)
log.info response

//creating an instance of an XMLSlurper
def xmlSlurper = new XmlSlurper()

//parse the response
def envelope = xmlSlurper.parseText(response.responseContentAsXml)
log.info envelope

//assert the web service response content
String expectedBicCode = 'GENODEF1SPL'
String actualBicCode = envelope.Body.getBankResponse.details.bic

log.warn "actualBicCode = $actualBicCode"

assert expectedBicCode == actualBicCode, "BIC Code not matching, expected value is $expectedBicCode, while actual one is $actualBicCode"</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - Reading a File" id="00d85912-5f51-44f5-9c33-884effa55327"><con:settings/><con:config><script>def filePath = 'D:\\Soap Projekty\\blz-service-data.txt'
File file = new File(filePath)

//loop through the file and print it 
def blz,bezeichnung,ort,plz,bic

file.eachLine
{
	line->
	log.info line 
	def lineData = line.split(',')
	blz = lineData[0] //blzCode
	bezeichnung = lineData[1]
	bic = lineData[2]
	ort = lineData[3]
	plz = lineData[4]
	log.warn "blz:  $blz, bezeichung:  $bezeichnung, BIC: $bic, ort: $ort, plz: $plz"
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4ad3885e-5252-4e78-aca7-6b056980042a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC02_DataDrivenTesting" searchProperties="true"><con:settings/><con:testStep type="request" id="93d38218-a28a-4f3f-96fb-3d0001f5488c" name="getBank - Request 1" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BLZServiceSOAP11Binding</con:interface><con:operation>getBank</con:operation><con:request name="getBank - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6d1115b6-b960-4eeb-aaf8-c416b17c6700"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.thomas-bayer.com/axis2/services/BLZService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:blz="http://thomas-bayer.com/blz/">
   <soapenv:Header/>
   <soapenv:Body>
      <blz:getBank>
         <blz:blz>55020500</blz:blz>
      </blz:getBank>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="baaa76c8-d86d-4194-9c85-3c2db977b15b" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://thomas-bayer.com/blz/BLZServicePortType/getBankRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script - E2E Testing" id="89af5fe3-8821-4318-8dbc-434eb68db6af"><con:settings/><con:config><script>import com.eviware.soapui.support.GroovyUtils

//Read bank service data from a file
File blzFile = new File('D:\\Soap Projekty\\blz-service-data.txt')
String blz,bez,ort,plz,bic
String bezInResponse,ortInReponse,plzInResponse,bicInResponse
def lineData

//create an instance of GroovyUtils
def groovyUtils = new GroovyUtils(context)
def requestXmlHolder,responseXmlHolder
//loop from a file and read content
blzFile.eachLine
{
	line ->
	lineData = line.split(',')
	blz = lineData[0] //blz
     bez = lineData[1] //blz	
	bic = lineData[2] //blz
	ort = lineData[3]
	plz = lineData[4]
	log.info "blz: $blz, bez: $bez, bic: $bic, ort: $ort, plz: $plz"

	requestXmlHolder = groovyUtils.getXmlHolder("getBank - Request 1#Request")
	requestXmlHolder ["//blz:blz"] = blz

	//update a property value
	requestXmlHolder.updateProperty()
	
	//Call a getBank operation with BLZ code from a file
	testRunner.testCase.getTestStepByName('getBank - Request 1').run(testRunner,context)
	responseXmlHolder = groovyUtils.getXmlHolder("getBank - Request 1#Response")

	//blzInResponse = responseXmlHolder["//ns1:blz"] 
	bezInResponse = responseXmlHolder["//ns1:bezeichnung"] 
	ortInResponse = responseXmlHolder ["//ns1:ort"] 
	plzInResponse = responseXmlHolder["//ns1:plz"] 
	bicInResponse = responseXmlHolder["//ns1:bic"] 

	log.warn  "bezInRespone: $bezInResponse, bicInResponse: $bicInResponse, ortInResponse: $ortInResponse, plzInResponse: $plzInResponse"
	
	//Write assertions for bic,ort,plz,bezeichnung
	//assert blz == blzInResponse
	assert bez == bezInResponse
	assert ort == ortInResponse
	assert plz == plzInResponse
	assert bic == bicInResponse

}



</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>username</con:name><con:value>okles</con:value></con:property><con:property><con:name>password</con:name><con:value>uptheirons</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>